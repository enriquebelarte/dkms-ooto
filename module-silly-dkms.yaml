apiVersion: ooto.sigs.k8s.io/v1alpha1
kind: Module
metadata:
  name: ooto-silly 
spec:
  driverContainer: # is a Container spec
    # This container will not be privileged by default.
    # It will mount /lib/modules and /usr/lib/modules automatically.
    name: overwritten-anyway
    command: [sleep, infinity]
    lifecycle:
      postStart:
        exec:
          command: [modprobe, -vd, /opt, silly]
      preStop:
        exec:
          command: [modprobe, -rvd, /opt, silly]
    securityContext:
      capabilities:
        add: [SYS_MODULE] # this is enough in most cases
  kernelMappings:
    - literal: 5.4.196-108.356.amzn2.x86_64 
      build:
        pull:
          insecure: false 
        push:
          insecure: false
        dockerfile: |
          ARG KERNEL_VERSION='' 
          FROM amazonlinux as builder
          RUN amazon-linux-extras install kernel-5.4 -y 
          RUN yum -y install kernel-5.4.196-108.356.amzn2.x86_64 kernel-devel-5.4.196-108.356.amzn2.x86_64 python3 git make gcc bison flex elfutils-libelf-devel dkms openssl-devel xz yum-utils bc && yum clean all
          WORKDIR usr/src 
          RUN git clone https://github.com/enriquebelarte/silly-kmod.git  
          RUN mv silly-kmod silly-0.1
          RUN dkms add silly/0.1
          RUN dkms build silly/0.1 
 
          FROM amazonlinux 
          RUN yum -y install kmod && yum clean all
          ARG KERNEL_VERSION
          RUN mkdir -p /opt/lib/modules/${KERNEL_VERSION}
          COPY --from=builder /build/silly-kmod/silly.ko /opt/lib/modules/${KERNEL_VERSION}/
          RUN depmod -b /opt
      containerImage: 804517629211.dkr.ecr.eu-west-3.amazonaws.com/silly-kmod:0.2


  selector:  
    kubernetes.io/hostname: ip-192-168-13-20.eu-west-3.compute.internal
  imagePullSecret:
    name: aws-ecr

